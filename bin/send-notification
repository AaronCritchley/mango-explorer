#!/usr/bin/env pyston3

import os
import sys

from pathlib import Path

# Get the full path to this script.
script_path = Path(os.path.realpath(__file__))

# The parent of the script is the bin directory.
# The parent of the bin directory is the notebook directory.
# It's this notebook directory we want.
notebook_directory = script_path.parent.parent

# Add the notebook directory to our import path.
sys.path.append(str(notebook_directory))

# Add the startup directory to our import path.
startup_directory = notebook_directory / "meta" / "startup"
sys.path.append(str(startup_directory))

import argparse
import logging
import os.path
import projectsetup  # noqa: F401
import traceback

from Constants import WARNING_DISCLAIMER_TEXT
from Notification import parse_subscription_target

# We explicitly want argument parsing to be outside the main try-except block because some arguments
# (like --help) will cause an exit, which our except: block traps.
parser = argparse.ArgumentParser(description="Sends SOL to a different address.")
parser.add_argument("--notification-target", type=parse_subscription_target, required=True, action="append",
                    help="The notification target - a compound string that varies depending on the target")
parser.add_argument("--message", type=str, help="Message to send")
parser.add_argument("--log-level", default=logging.WARNING, type=lambda level: getattr(logging, level),
                    help="level of verbosity to log (possible values: DEBUG, INFO, WARNING, ERROR, CRITICAL)")
args = parser.parse_args()

logging.getLogger().setLevel(args.log_level)
logging.warning(WARNING_DISCLAIMER_TEXT)

try:
    for notify in args.notification_target:
        print("Sending to:", notify)
        notify.send(args.message)

    print("Notifications sent")
except Exception as exception:
    logging.critical(f"send-sols stopped because of exception: {exception} - {traceback.format_exc()}")
except:
    logging.critical(f"send-sols stopped because of uncatchable error: {traceback.format_exc()}")
